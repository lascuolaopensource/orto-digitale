/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    piante: Piante;
    ricette: Ricette;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    piante: PianteSelect<false> | PianteSelect<true>;
    ricette: RicetteSelect<false> | RicetteSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    aree: Aree;
    'admin-tools': AdminTool;
  };
  globalsSelect: {
    aree: AreeSelect<false> | AreeSelect<true>;
    'admin-tools': AdminToolsSelect<false> | AdminToolsSelect<true>;
  };
  locale: 'it' | 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "piante".
 */
export interface Piante {
  id: string;
  name?: string | null;
  content?: {
    short_description?: string | null;
    descrizione?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    immagine?: (string | Media)[] | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ricette".
 */
export interface Ricette {
  id: string;
  name?: string | null;
  content?: {
    autore?: string | null;
    descrizione?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    immagine?: (string | Media)[] | null;
    ingredienti?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    preparazione?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    piante?: (string | Piante)[] | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'piante';
        value: string | Piante;
      } | null)
    | ({
        relationTo: 'ricette';
        value: string | Ricette;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "piante_select".
 */
export interface PianteSelect<T extends boolean = true> {
  name?: T;
  content?:
    | T
    | {
        short_description?: T;
        descrizione?: T;
        immagine?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ricette_select".
 */
export interface RicetteSelect<T extends boolean = true> {
  name?: T;
  content?:
    | T
    | {
        autore?: T;
        descrizione?: T;
        immagine?: T;
        ingredienti?: T;
        preparazione?: T;
        piante?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aree".
 */
export interface Aree {
  id: string;
  entrata?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  atelier?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  vasche?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  ricettario?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  percorso_alimurgico?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  serra?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  percorso_aromatico?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  alberi_da_frutto?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  eventi?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  tapee?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  compostiera?: {
    informazioni?: {
      nome?: string | null;
      short_description?: string | null;
    };
    contenuto?: {
      descrizione?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      immagine?: (string | Media)[] | null;
      piante?: (string | Piante)[] | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admin-tools".
 */
export interface AdminTool {
  id: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aree_select".
 */
export interface AreeSelect<T extends boolean = true> {
  entrata?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  atelier?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  vasche?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  ricettario?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  percorso_alimurgico?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  serra?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  percorso_aromatico?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  alberi_da_frutto?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  eventi?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  tapee?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  compostiera?:
    | T
    | {
        informazioni?:
          | T
          | {
              nome?: T;
              short_description?: T;
            };
        contenuto?:
          | T
          | {
              descrizione?: T;
              immagine?: T;
              piante?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admin-tools_select".
 */
export interface AdminToolsSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}